pipeline {
    agent any

    tools {
        maven 'Maven3'
    }

    stages {
        stage('Checkout SCM') {
            steps {
                echo "üì• Checking out code from GitHub branch ramtest3..."
                git branch: 'ramtest3', url: 'https://github.com/vivekgshan/Log-Processing.git'
            }
        }

        stage('Build JAR') {
            steps {
                echo "üî® Building JAR with Maven..."
                script {
                    if (isUnix()) {
                        sh 'mvn -f Backend/loggenerator/pom.xml clean package -DskipTests'
                    } else {
                        bat 'mvn -f Backend\\loggenerator\\pom.xml clean package -DskipTests'
                    }
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                echo "üê≥ Building Docker image..."
                script {
                    if (isUnix()) {
                        sh 'docker rm -f loggenerator || true'
                        sh 'docker build -t loggenerator:latest -f Backend/loggenerator/Dockerfile .'
                    } else {
                        bat 'docker rm -f loggenerator || exit 0'
                        bat 'docker build -t loggenerator:latest -f Backend\\loggenerator\\Dockerfile .'
                    }
                }
            }
        }

        stage('Run Container') {
            steps {
                echo "üöÄ Running container with log volume mount..."
                script {
                    if (isUnix()) {
                        sh '''
                        mkdir -p $HOME/log
                        docker run -d --name loggenerator -p 8780:8780 \
                          -v $HOME/log:/root/log \
                          loggenerator:latest
                        '''
                    } else {
                        bat '''
                        if not exist "%USERPROFILE%\\log" mkdir "%USERPROFILE%\\log"
                        docker run -d --name loggenerator -p 8780:8780 ^
                          -v %USERPROFILE%\\log:/root/log ^
                          loggenerator:latest
                        '''
                    }
                }
            }
        }

        stage('Health Check (/logs)') {
            steps {
                echo "ü©∫ Checking if application responds on /logs..."
                script {
                    if (isUnix()) {
                        sh '''
                        for i in {1..10}; do
                          if curl -s -X POST -H "Content-Type: application/json" -d '{"level":"INFO","message":"healthcheck"}' http://localhost:8780/logs > /dev/null; then
                            echo "‚úÖ App responded to /logs"
                            exit 0
                          fi
                          echo "Waiting for app... ($i/10)"
                          sleep 5
                        done
                        echo "‚ùå App did not start in time"
                        exit 1
                        '''
                    } else {
                        powershell '''
                        $body = '{"level":"INFO","message":"healthcheck"}'
                        $maxRetries = 10
                        $success = $false
                        for ($i=1; $i -le $maxRetries; $i++) {
                          try {
                            Invoke-RestMethod -Uri http://localhost:8780/logs -Method POST -Body $body -ContentType "application/json" | Out-Null
                            Write-Host "‚úÖ App responded to /logs"
                            $success = $true
                            break
                          } catch {
                            Write-Host "Waiting for app... ($i/$maxRetries)"
                            Start-Sleep -Seconds 5
                          }
                        }
                        if (-not $success) { exit 1 }
                        '''
                    }
                }
            }
        }
    }

    post {
        always {
            echo "‚ö†Ô∏è checking up containers..."
            script {
                if (isUnix()) {
                    sh 'docker ps -a'
                    sh 'ls -l $HOME/log || true'
                } else {
                    bat 'docker ps -a'
                    bat 'dir "%USERPROFILE%\\log"'
                }
            }
        }
    }
}
